---
# code: language=ansible

- name: Set dpkg architecture
  vars:
    arch_map:
      aarch64: arm64
      x86_64: amd64
  ansible.builtin.set_fact:
    arch: "{{ [ansible_architecture] | map('extract', arch_map) | first }}"


- name: Install Zerotier Systemd Manager
  ansible.builtin.apt:
    deb: "{{ zerotier_manager_url }}"


- name: Restart zerotier-one service
  ansible.builtin.systemd_service:
    service: zerotier-one
    state: restarted
    daemon-reload: true


- name: Enable zerotier-systemd-manager
  ansible.builtin.systemd_service:
    service: zerotier-systemd-manager.timer
    state: started
    enabled: true


- name: Install ZeroNSD package
  ansible.builtin.apt:
    deb: "{{ zeronsd_url }}"


- name: Check if DNS is enabled in the network
  ansible.builtin.command: "zerotier-cli get {{ zerotier_net_id }} allowDNS"
  changed_when: false
  register: dns_status


- name: Configure ZeroNSD
  when: dns_status.stdout | int == 0
  block:
    - name: Allow DNS in the network
      ansible.builtin.command: "zerotier-cli set {{ zerotier_net_id }} allowDNS=1"
      changed_when: false

    - name: Serve DNS to the network
      ansible.builtin.command: "zeronsd supervise -t {{ zerotier_token }} -w -d {{ zeronsd_zone }} {{ zerotier_net_id }}"
      changed_when: false


- name: Start ZeroNSD service
  ansible.builtin.systemd_service:
    service: "zeronsd-{{ zerotier_net_id }}"
    state: started
    enabled: true
